/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/ts/map.ts":
/*!*****************************!*\
  !*** ./resources/ts/map.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar origin;\nvar destination;\nvar waypoints = [];\n// Initialize and add the map\nfunction initMap() {\n  var directionsRenderer = new google.maps.DirectionsRenderer();\n  var directionsService = new google.maps.DirectionsService();\n  calculateAndDisplayRoute(directionsService, directionsRenderer);\n}\nfunction calculateAndDisplayRoute(directionsService, _directionsRenderer) {\n  var promises = gm_plan.map(function (gm_plan) {\n    return getLatLngFromAddress(gm_plan);\n  });\n  Promise.all(promises).then(function (locations) {\n    var _a, _b;\n    locations.forEach(function (location, index) {\n      if (location) {\n        var latitude = location.lat();\n        var longitude = location.lng();\n      }\n    });\n    var center = locations[0] !== null ? locations[0] : undefined;\n    // const map = new google.maps.Map(document.getElementById(\"map\") as HTMLElement,\n    var map = new google.maps.Map(document.querySelector(\"[id^='map_']\"), {\n      zoom: 14,\n      center: center,\n      disableDefaultUI: true\n    });\n    for (var index = 0; index < locations.length; index++) {\n      if (index === 0) {\n        origin = locations[index];\n      } else if (index === locations.length - 1) {\n        destination = locations[index];\n      } else {\n        var waypoint = {\n          location: new google.maps.LatLng((_a = locations[index]) === null || _a === void 0 ? void 0 : _a.lat(), (_b = locations[index]) === null || _b === void 0 ? void 0 : _b.lng()),\n          stopover: true\n        };\n        waypoints.push(waypoint);\n      }\n    }\n    // ルート検索のリクエストを送信\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      waypoints: waypoints,\n      travelMode: google.maps.TravelMode.DRIVING\n    }, function (response, status) {\n      if (status === google.maps.DirectionsStatus.OK) {\n        // ルートを描画する\n        var directionsRenderer = new google.maps.DirectionsRenderer();\n        directionsRenderer.setDirections(response);\n        directionsRenderer.setMap(map);\n      } else {\n        window.alert('Directions request failed due to ' + status);\n      }\n    });\n  })[\"catch\"](function (error) {\n    console.error(error);\n  });\n}\n;\n// 住所→緯度経度に変換\nfunction getLatLngFromAddress(address) {\n  return new Promise(function (resolve, reject) {\n    var geocoder = new google.maps.Geocoder();\n    geocoder.geocode({\n      address: address\n    }, function (results, status) {\n      if (status === google.maps.GeocoderStatus.OK && results.length > 0) {\n        var location = results[0].geometry.location;\n        resolve(location);\n      } else {\n        reject(new Error(\"Geocodeが失敗しました。ステータス: \" + status));\n      }\n    });\n  });\n}\nwindow.initMap = initMap;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/ts/map.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/ts/map.ts"](0, __webpack_exports__);
/******/ 	
/******/ })()
;